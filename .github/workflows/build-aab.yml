# name: Build Android AAB

# on:
#   workflow_dispatch:
#   push:
#     branches: 
#       - main
#       - master

# jobs:
#   build-android:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
      
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
#           cache: 'npm'
      
#       - name: Setup Java
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: '21'  # Changed from 17 to 21
      
#       - name: Setup Android SDK
#         uses: android-actions/setup-android@v3
      
#       - name: Create google-services.json
#         run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > google-services.json
      
#       - name: Install dependencies
#         run: npm ci
      
#       - name: Clean dependencies
#         run: |
#           npm run clean || true
#           rm -rf node_modules/.cache || true
      
#       - name: Generate Android project
#         run: npx expo prebuild --platform android --clean
      
#       - name: Make gradlew executable
#         run: chmod +x android/gradlew
      
#       - name: Clean Gradle cache
#         run: |
#           cd android
#           ./gradlew clean
      
#       - name: Build AAB
#         run: |
#           cd android
#           ./gradlew bundleRelease --no-daemon --stacktrace
      
#       - name: Upload AAB as artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: android-aab
#           path: android/app/build/outputs/bundle/release/app-release.aab
#           retention-days: 30

name: Build Android AAB

on:
  workflow_dispatch:
  push:
    branches: 
      - main
      - master

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'  # Changed back to 17 for compatibility
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Create google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > google-services.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Clean dependencies
        run: |
          npm run clean || true
          rm -rf node_modules/.cache || true
      
      - name: Generate Android project
        run: npx expo prebuild --platform android --clean
      
      - name: Setup release keystore
        run: |
          mkdir -p android/app
          echo '${{ secrets.KEYSTORE_FILE }}' | tr -d '[:space:]' | base64 -d > android/app/keystore.jks
          ls -la android/app/keystore.jks
          
      - name: Create keystore.properties
        run: |
          cat > android/keystore.properties << EOF
          storeFile=keystore.jks
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          EOF
          
      - name: List keystore aliases (debug)
        run: |
          cd android
          echo "=== Available aliases in keystore ==="
          keytool -list -keystore app/keystore.jks -storepass '${{ secrets.KEYSTORE_PASSWORD }}' || echo "Failed to list keystore"
      
      - name: Configure Android build for single architecture
        run: |
          cd android
          
          # Add architecture filter to app/build.gradle to speed up build
          cat >> app/build.gradle << 'EOF'
          
          android {
              splits {
                  abi {
                      enable false  // Disable ABI splits to build universal APK
                  }
              }
              packagingOptions {
                  pickFirst "lib/x86/libc++_shared.so"
                  pickFirst "lib/x86_64/libc++_shared.so"
                  pickFirst "lib/arm64-v8a/libc++_shared.so"
                  pickFirst "lib/armeabi-v7a/libc++_shared.so"
              }
              signingConfigs {
                  release {
                      def keystorePropertiesFile = rootProject.file("keystore.properties")
                      if (keystorePropertiesFile.exists()) {
                          def keystoreProperties = new Properties()
                          keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                          storeFile file(keystoreProperties['storeFile'])
                          storePassword keystoreProperties['storePassword']
                          keyAlias keystoreProperties['keyAlias']
                          keyPassword keystoreProperties['keyPassword']
                      }
                  }
              }
          }
          
          android.buildTypes.release.signingConfig = android.signingConfigs.release
          EOF
      
      - name: Make gradlew executable
        run: chmod +x android/gradlew
      
      - name: Clean Gradle cache
        run: |
          cd android
          ./gradlew clean
      
      - name: Build AAB with timeout
        timeout-minutes: 30
        run: |
          cd android
          export GRADLE_OPTS="-Xmx4g -XX:+UseParallelGC"
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=app/keystore.jks \
            -Pandroid.injected.signing.store.password='${{ secrets.KEYSTORE_PASSWORD }}' \
            -Pandroid.injected.signing.key.alias='${{ secrets.KEY_ALIAS }}' \
            -Pandroid.injected.signing.key.password='${{ secrets.KEY_PASSWORD }}' \
            --no-daemon \
            --stacktrace \
            --parallel \
            --max-workers=2
      
      - name: Verify AAB signing
        run: |
          cd android
          echo "=== Verifying AAB signature ==="
          keytool -printcert -jarfile app/build/outputs/bundle/release/app-release.aab | head -20
      
      - name: Upload AAB as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 30