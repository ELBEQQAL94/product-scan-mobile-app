# name: Build Android AAB

# on:
#   workflow_dispatch:
#   push:
#     branches: 
#       - main
#       - master

# jobs:
#   build-android:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
      
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
#           cache: 'npm'
      
#       - name: Setup Java
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: '21'  # Changed from 17 to 21
      
#       - name: Setup Android SDK
#         uses: android-actions/setup-android@v3
      
#       - name: Create google-services.json
#         run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > google-services.json
      
#       - name: Install dependencies
#         run: npm ci
      
#       - name: Clean dependencies
#         run: |
#           npm run clean || true
#           rm -rf node_modules/.cache || true
      
#       - name: Generate Android project
#         run: npx expo prebuild --platform android --clean
      
#       - name: Make gradlew executable
#         run: chmod +x android/gradlew
      
#       - name: Clean Gradle cache
#         run: |
#           cd android
#           ./gradlew clean
      
#       - name: Build AAB
#         run: |
#           cd android
#           ./gradlew bundleRelease --no-daemon --stacktrace
      
#       - name: Upload AAB as artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: android-aab
#           path: android/app/build/outputs/bundle/release/app-release.aab
#           retention-days: 30

name: Build Android AAB

on:
  workflow_dispatch:
  push:
    branches: 
      - main
      - master

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Create google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > google-services.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Clean dependencies
        run: |
          npm run clean || true
          rm -rf node_modules/.cache || true
      
      - name: Generate Android project
        run: npx expo prebuild --platform android --clean
      
      - name: Setup release keystore
        run: |
          echo '${{ secrets.KEYSTORE_FILE }}' | base64 -d > android/app/keystore.jks
          
      - name: Create keystore.properties
        run: |
          echo "storeFile=keystore.jks" >> android/keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/keystore.properties
      
      - name: Modify build.gradle for signing
        run: |
          # First, let's see the current build.gradle structure
          echo "=== Current build.gradle ==="
          cat android/app/build.gradle
          echo "=========================="
          
          # Create a Python script to properly modify the build.gradle
          cat > modify_gradle.py << 'EOF'
          import re
          
          with open('android/app/build.gradle', 'r') as f:
              content = f.read()
          
          # Add signingConfigs section after android {
          signing_config = '''
              signingConfigs {
                  release {
                      def keystorePropertiesFile = rootProject.file("keystore.properties")
                      if (keystorePropertiesFile.exists()) {
                          def keystoreProperties = new Properties()
                          keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                          
                          storeFile file(keystoreProperties['storeFile'])
                          storePassword keystoreProperties['storePassword']
                          keyAlias keystoreProperties['keyAlias']
                          keyPassword keystoreProperties['keyPassword']
                      }
                  }
              }
          '''
          
          # Insert signingConfigs after 'android {'
          content = re.sub(r'(android\s*{)', r'\1' + signing_config, content)
          
          # Modify buildTypes release section to use signing config
          content = re.sub(
              r'(buildTypes\s*{[^}]*release\s*{[^}]*)',
              r'\1\n            signingConfig signingConfigs.release',
              content,
              flags=re.DOTALL
          )
          
          with open('android/app/build.gradle', 'w') as f:
              f.write(content)
          
          print("Modified build.gradle:")
          with open('android/app/build.gradle', 'r') as f:
              print(f.read())
          EOF
          
          python3 modify_gradle.py
      
      - name: Make gradlew executable
        run: chmod +x android/gradlew
      
      - name: Clean Gradle cache
        run: |
          cd android
          ./gradlew clean
      
      - name: Debug signing configuration
        run: |
          cd android
          ./gradlew signingReport
      
      - name: Build AAB
        run: |
          cd android
          ./gradlew bundleRelease --no-daemon --stacktrace
      
      - name: Verify AAB signing
        run: |
          cd android
          echo "=== Verifying AAB signature ==="
          keytool -printcert -jarfile app/build/outputs/bundle/release/app-release.aab | head -10
      
      - name: Upload AAB as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 30